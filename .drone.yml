workspace:
  base: /go
  path: src/github.com/udistrital/${DRONE_REPO##udistrital/}
  when:
      branch:
      - develop
      - release/*
      - master

kind: pipeline
name: oas_api_ci

trigger:
  event:
    exclude:
      - tag

steps:
- name: check_readme
  image: jjvargass/qa_develoment:latest
  commands:
  - python /app/check_readme.py
  when:
    branch:
    - develop
    - feature/*
    - hotfix/*
    - release/*
    event:
    - push

- name: check_branch
  image: jjvargass/qa_develoment:latest
  commands:
  - python /app/check_branch.py -H ${DRONE_GIT_HTTP_URL}
  when:
    branch:
    - develop
    - feature/*
    - hotfix/*
    - release/*
    event:
    - push

- name: check_commits
  image: jjvargass/qa_develoment:latest
  commands:
  - python /app/check_commits.py
  when:
    branch:
    - develop
    - feature/*
    - hotfix/*
    - release/*
    event:
    - push

- name: go_build
  image: golang:1.24
  commands:
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main
  when:
    branch:
    - feature/*
    - hotfix/*
    - develop
    - release/*
    - master
    event:
    - push

- name: go_run_test
  image: golang:1.24
  commands:
  - go get -t
  - go install github.com/smartystreets/goconvey@latest
  - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
  - go install github.com/jstemmer/go-junit-report@latest
  - golangci-lint run --out-format=checkstyle --timeout=5m > lint.xml || true
  - cat lint.xml
  # - go install github.com/axw/gocov/...@latest
  # - go install github.com/AlekSi/gocov-xml@latest
  # - gocov test ./... | gocov-xml > coverage.xml
  # - go test -v ./... | go-junit-report > test.xml
  when:
    branch:
    - feature/*
    - hotfix/*
    - develop
    - release/*
    - master
    event:
    - push

- name: run_sonar_scanner
  image: aosapps/drone-sonar-plugin
  settings:
    sonar_host:
      from_secret: SONAR_HOST
    sonar_token:
      from_secret: SONAR_TOKEN

- name: publish_to_ecr_release
  image: plugins/ecr
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    region:
      from_secret: AWS_REGION
    repo: ${DRONE_REPO##udistrital/}
    tags:
      - ${DRONE_COMMIT:0:7}
      - release
  when:
    branch:
    - release/*
    event:
    - push

- name: publish_to_ecr_master
  image: plugins/ecr
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    region:
      from_secret: AWS_REGION
    repo: ${DRONE_REPO##udistrital/}
    tags:
      - ${DRONE_COMMIT:0:7}
      - latest
  when:
    branch:
    - master
    event:
    - push


- name: update_ecs_service
  image: amazon/aws-cli:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
  - case ${DRONE_BRANCH} in
    master)
    SUFFIX=prod
    CLUSTER=oas
      ;;
    *)
    SUFFIX=test
    CLUSTER=test
      ;;
    esac
  - aws ecs update-service
    --cluster $${CLUSTER}
    --service $${DRONE_REPO_NAME}_$${SUFFIX}
    --force-new-deployment
    --query "service.deployments[0].id"
  when:
    branch:
    - release/*
    - master
    event:
    - push

- name: notify_telegram
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: telegram_token
    to:
      from_secret: telegram_to
    format: html
    message: >
      {{#success build.status}}
        ✅ <a href="{{build.link}}">SUCCESS</a> <b>Build #{{build.number}}</b>
        <b>type: </b><code>{{ build.event }}</code>
        <b>Repo: </b><code>{{repo.name}}</code>
        <b>Branch: </b><code>{{commit.branch}}</code>
        <b>Commit: </b><a href="{{commit.link}}">{{truncate commit.sha 7}}</a>
        <b>Autor: </b>{{commit.author}} <code>&#128526 </code>
      {{else}}
        ❌ <a href="{{build.link}}">FAILURE</a> <b>Build #{{build.number}}</b>
        <b>type: </b><code>{{ build.event }}</code>
        <b>Repo: </b><code>{{repo.name}}</code>
        <b>Branch: </b><code>{{commit.branch}}</code>
        <b>Commit: </b><a href="{{commit.link}}">{{truncate commit.sha 7}}</a>
        <b>Autor: </b>{{commit.author}} <code>&#128549 </code>
      {{/success}}
  when:
    branch:
    - release/*
    - master
    event:
    - push
    status:
    - failure
    - success
